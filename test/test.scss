// scss-lint:disable SelectorFormat

@mixin test-debug {
	/* Layouts: #{inspect($o-grid-layouts)} */
	/* Layout names: #{inspect($_o-grid-layout-names)} */
	/* Gutters: #{inspect($o-grid-gutters)} */
}

// Add default layouts
// a minimum of 2 layouts is required for o-grid to work
$o-grid-layouts: (
	X: 800px,
	Z: 1200px,
);

@import '../main';

/**
 * Initial layouts and sizes: #{inspect($o-grid-layouts)}
 * Initial layout names: #{inspect($_o-grid-layout-names)}
 */

/**
 * Gutter for layout M should be removed since there's no M layout anymore:
 * Gutter M exists: #{map-has-key($o-grid-gutters, M)} // Should return false
 */

/**
 * Default gutter exists: #{map-has-key($o-grid-gutters, default)}
 */

@include oGridAddLayout($layout-name: A, $layout-width: 340px);
@include test-debug();

@include oGridRespondTo(A) {
	A {
		max-width: oGridGetMaxWidthForLayout(A);
		gutter: oGridGutter(A);
	}
}

@include oGridAddLayout($layout-name: Y, $layout-width: 1100px);
@include test-debug();
@include oGridRespondTo(Y) {
	Y {
		max-width: oGridGetMaxWidthForLayout(Y);
		gutter: oGridGutter(Y);
	}
}

@include oGridAddLayout($layout-name: B, $layout-width: 365px, $gutter-width: 30px);
@include test-debug();
@include oGridRespondTo(B) {
	B {
		max-width: oGridGetMaxWidthForLayout(B);
		gutter: oGridGutter(B);
	}
}

$o-grid-gutters: (default: 20px);
@include oGridAddLayout($layout-name: C, $layout-width: 372px);
@include test-debug();
@include oGridRespondTo(C) {
	C {
		max-width: oGridGetMaxWidthForLayout(C);
		gutter: oGridGutter(C);
	}
}

@include oGridRespondTo(Z) {
	Z {
		max-width: oGridGetMaxWidthForLayout(Z);
		gutter: oGridGutter(Z);
	}
}
