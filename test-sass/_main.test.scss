@import 'true';

@import '../main';

$inspect: true;
@include describe('oGrid - fluid') {
	@include describe('oGridColspan') {
		@include it('should return the number (%) of the width of the element in a 12 column grid (default)') {
			@include assert-equal(oGridColspan(1/2), (50%));
			@include assert-equal(oGridColspan(1/4), (25%));
			@include assert-equal(round(oGridColspan(1/3)), round((33.33333%)));
			@include assert-equal(round(oGridColspan(2/3)), round((66.66667%)));
			@include assert-equal(round(oGridColspan(1)), round((8.33333%)));
			@include assert-equal(round(oGridColspan(2)), round((16.66667%)));
			@include assert-equal(oGridColspan(3), (25%));
			@include assert-equal(round(oGridColspan(4)), round((33.33333%)));
			@include assert-equal(round(oGridColspan(5)), round((41.66667%)));
			@include assert-equal(oGridColspan(6), (50%));
			@include assert-equal(round(oGridColspan(7)), round((58.33333%)));
			@include assert-equal(round(oGridColspan(8)), round((66.66667%)));
			@include assert-equal(oGridColspan(9), (75%));
			@include assert-equal(round(oGridColspan(10)), round((83.33333%)));
			@include assert-equal(round(oGridColspan(11)), round((91.666673%)));
			@include assert-equal(oGridColspan(12), (100%));
		};
	};

	@include describe('oGridRow') {
		@include test('sass mixin complies correctly') {
			@include assert() {
				@include output($selector: false) {
					.test-row {
						@include oGridRow();
					}
				};

				@include expect($selector: false) {
					.test-row {
						clear: both;
						flex-wrap: wrap;
						display: flex;
						margin-left: -10px;
						zoom: 1;
					}

					@media print {
						.test-row {
							display: inherit;
						}
					}

					@media (min-width: 46.25em) {
						.test-row  {
							margin-left: -20px;
						}
					}

					@media \0screen {
						.test-row {
							margin-left: -20px;
						}
					}

					.test-row:before,
					.test-row:after {
						content: '';
						display: table;
						display: flex;
					}

					.test-row:after {
						clear: both;
					}
				};
			};
		};
	}

	//
	@include describe('oGridRespondTo') {
		@include test('sass mixin complies correct media query for <S') {
			@include assert() {
				@include output {
					@include oGridRespondTo($until:S) {
						background: peachpuff;
					};
				};

				@include expect {
					@media (max-width: 30.615em) {
						background: peachpuff;
					};
				};
			};
		};

		@include test('sass mixin complies correct media query for S<') {
			@include assert() {
				@include output {
					@include oGridRespondTo(S) {
						background: peachpuff;
					};
				};

				@include expect {
					@media (min-width: 30.625em) {
						background: peachpuff;
					};
				};
			};
		};

		@include test('sass mixin complies correct media query S< >M') {
			@include assert() {
				@include output {
					@include oGridRespondTo($from: S, $until: M) {
						background: peachpuff;
					};
				};

				@include expect {
					@media (min-width: 30.625em) and (max-width: 46.24em) {
						background: peachpuff;
					};
				};
			};
		};

		@include test('sass mixin complies correct media query S< >M') {
			@include assert() {
				@include output {
					@include oGridRespondTo($from: S, $until: M) {
						background: peachpuff;
					};
				};

				@include expect {
					@media (min-width: 30.625em) and (max-width: 46.24em) {
						background: peachpuff;
					};
				};
			};
		};

		@include test('sass mixin complies correct media query >M') {
			@include assert() {
				@include output {
					@include oGridRespondTo($until: M) {
						background: peachpuff;
					};
				};

				@include expect {
					@media (max-width: 46.24em) {
						background: peachpuff;
					};
				};
			};
		};

		@include test('sass mixin complies correct media query M< >L') {
			@include assert() {
				@include output {
					@include oGridRespondTo($from: M, $until: L) {
						background: peachpuff;
					};
				};

				@include expect {
					@media (min-width: 46.25em) and (max-width: 61.24em) {
						background: peachpuff;
					};
				};
			};
		};

		@include test('sass mixin complies correct media query >L') {
			@include assert() {
				@include output {
					@include oGridRespondTo(L) {
						background: peachpuff;
					};
				};

				@include expect {
					@media (min-width: 61.25em) {
						background: peachpuff;
					};
				};
			};
		};

		@include test('sass mixin complies correct media query L< >XL') {
			@include assert() {
				@include output {
					@include oGridRespondTo($from: L, $until: XL) {
						background: peachpuff;
					};
				};

				@include expect {
					@media (min-width: 61.25em) and (max-width: 76.24em) {
						background: peachpuff;
					};
				};
			};
		};

		@include test('sass mixin complies correct media query XL<') {
			@include assert() {
				@include output {
					@include oGridRespondTo(XL) {
						background: peachpuff;
					};
				};

				@include expect {
					@media (min-width: 76.25em) {
						background: peachpuff;
					};
				};
			};
		};
	};
};

$o-grid-mode: 'fixed';
@include describe('oGrid - fixed') {
	@include describe('oGridRow') {
		@include test('sass mixin complies correctly') {
			@include assert() {
				@include output($selector: false) {
					.test-row {
						@include oGridRow();
					}
				};

				@include expect($selector: false) {
					.test-row {
						clear: both;
						flex-wrap: wrap;
						display: flex;
						margin-left: -20px;
						zoom: 1;
					}

					@media print {
						.test-row {
							display: inherit;
						}
					}

					.test-row:before,
					.test-row:after {
						content: '';
						display: table;
						display: flex;
					}

					.test-row:after {
						clear: both;
					}
				};
			};
		};
	};
};
